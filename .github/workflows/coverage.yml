---
# Run coverage and create badge

name: Run coverage and update coverage badge

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  update_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install coverage and tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install coverage coverage-badge pytest requests-mock

      - name: Install rssfixer
        run: |
          python -m pip install -e .

      - name: Run coverage and create badge
        run: |
          coverage run -m pytest
          coverage report -m > resources/coverage.txt
          coverage-badge -f -q -o resources/coverage.svg

      # yamllint disable rule:line-length
      - name: Commit updated resources/coverage.txt resources/coverage.svg
        id: commit
        run: |
          git add resources/coverage.txt resources/coverage.svg
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes in resources/coverage.txt or resources/coverage.svg, skipping commit."
            echo "commit_status=skipped" >> "$GITHUB_ENV"
          else
            git commit -m "Update resources/coverage.txt resources/coverage.svg"
            echo "commit_status=committed" >> "$GITHUB_ENV"
          fi
      # yamllint enable

      - name: Push changes
        if: env.commit_status == 'committed'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
